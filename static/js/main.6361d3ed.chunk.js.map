{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","className","styled","contactForm","e","preventDefault","id","uuidv4","type","value","pattern","title","required","onChange","currentTarget","input","button","Filter","ContactsList","contacts","remove","map","item","text","onClick","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","find","alert","prev","normalizedFilter","toLowerCase","includes","filterContact","ReactDOM","render","document","getElementById","module","exports"],"mappings":"4PAwEeA,EAnEK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAyBA,OACE,uBAAMC,UAAWC,IAAOC,YAAaR,SAhBlB,SAACS,GACpBA,EAAEC,iBAEgBV,EAAS,CACzBE,OACAE,SACAO,GAAIC,kBAIJT,EAAQ,IACRE,EAAU,MAKZ,UACE,yCAEE,uBACEQ,KAAK,OACLX,KAAK,OACLY,MAAOZ,EACPa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAlCiB,SAACT,GACxBN,EAAQM,EAAEU,cAAcL,QAkClBR,UAAWC,IAAOa,WAGtB,2CAEE,uBACEP,KAAK,MACLX,KAAK,SACLY,MAAOV,EACPW,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SA3CmB,SAACT,GAC1BJ,EAAUI,EAAEU,cAAcL,QA2CpBR,UAAWC,IAAOa,WAGtB,wBAAQP,KAAK,SAASP,UAAWC,IAAOc,OAAxC,6B,gBC7CSC,EAZA,SAAC,GAAD,IAAGR,EAAH,EAAGA,MAAOI,EAAV,EAAUA,SAAV,OACb,0DAEE,uBAAOJ,MAAOA,EAAOI,SAAUA,EAAUhB,KAAK,SAASW,KAAK,OAAOP,UAAWC,IAAOa,Y,gBCkB1EG,EArBM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAChC,OACE,6BACGD,EAASE,KAAI,gBAAGf,EAAH,EAAGA,GAAIT,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAIE,UAAWC,IAAOoB,KAAtB,UACE,oBAAGrB,UAAWC,IAAOqB,KAArB,UAA4B1B,EAA5B,OACA,mBAAGI,UAAWC,IAAOqB,KAArB,SAA4BxB,IAC5B,wBAAQE,UAAWC,IAAOc,OAAQQ,QAAS,kBAAMJ,EAAOd,IAAxD,sBAH+BA,SCwC1BmB,EA1CH,WACV,MAAgC7B,oBAAS,kCAAM8B,KAAKC,MAAMC,aAAaC,QAAQ,oBAAtC,QAAsD,MAA/F,mBAAOV,EAAP,KAAiBW,EAAjB,KACA,EAA4BlC,mBAAS,IAArC,mBAAOmC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRL,aAAaM,QAAQ,WAAYR,KAAKS,UAAUhB,MAC/C,CAACA,IAwBJ,OACE,qCACE,2CACA,cAAC,EAAD,CAAaxB,SAzBE,SAACyC,GAClB,OAAIjB,EAASkB,MAAK,SAACf,GAAD,OAAUA,EAAKzB,OAASuC,EAAQvC,SAChDyC,MAAM,GAAD,OAAIF,EAAQvC,KAAZ,6BACE,IAETiC,GAAY,SAACS,GAAD,OAAWH,GAAX,mBAAuBG,QAC5B,MAqBL,0CACA,cAAC,EAAD,CAAQ9B,MAAOsB,EAAQlB,SAfN,SAACT,GACpB4B,EAAU5B,EAAEU,cAAcL,UAexB,cAAC,EAAD,CAAcU,SAZI,WACpB,IAAMqB,EAAmBT,EAAOU,cAChC,OAAOtB,EAASY,QAAO,SAACK,GAAD,OAAaA,EAAQvC,KAAK4C,cAAcC,SAASF,MAU9CG,GAAiBvB,OApBvB,SAACd,GACrBwB,GAAY,SAACS,GAAD,OAAUA,EAAKR,QAAO,SAACK,GAAD,OAAaA,EAAQ9B,KAAOA,eCjBlEsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCLjDC,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,OAAS,8B,kBCA7GD,EAAOC,QAAU,CAAC,OAAS,6BAA6B,KAAO,2BAA2B,KAAO,6B,kBCAjGD,EAAOC,QAAU,CAAC,MAAQ,yB","file":"static/js/main.6361d3ed.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"./ContactForm.module.css\"\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\")\r\n  const [number, setNumber] = useState(\"\")\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.currentTarget.value)\r\n  }\r\n\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.currentTarget.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const isSuccess = onSubmit({\r\n      name,\r\n      number,\r\n      id: uuidv4(),\r\n    })\r\n\r\n    if (isSuccess) {\r\n      setName(\"\")\r\n      setNumber(\"\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={styled.contactForm} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeName}\r\n          className={styled.input}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeNumber}\r\n          className={styled.input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={styled.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n}\r\n\r\nexport default ContactForm\r\n","import PropTypes from \"prop-types\"\r\nimport styled from \"./Filter.module.css\"\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input value={value} onChange={onChange} name=\"filter\" type=\"text\" className={styled.input}></input>\r\n  </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter\r\n","import PropTypes from \"prop-types\"\r\nimport styled from \"./ContactsList.module.css\"\r\n\r\nconst ContactsList = ({ contacts, remove }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styled.item} key={id}>\r\n          <p className={styled.text}>{name}:</p>\r\n          <p className={styled.text}>{number}</p>\r\n          <button className={styled.button} onClick={() => remove(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  remove: PropTypes.func,\r\n}\r\n\r\nexport default ContactsList\r\n","import React, { useState, useEffect } from \"react\"\nimport ContactForm from \"./components/ContactForm/ContactForm\"\nimport Filter from \"./components/Filter/Filter\"\nimport ContactsList from \"./components/ContactsList/ContactsList\"\n\nconst App = () => {\n  const [contacts, setContacts] = useState(() => JSON.parse(localStorage.getItem(\"contacts\")) ?? [])\n  const [filter, setFilter] = useState(\"\")\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts))\n  }, [contacts])\n\n  const addContact = (contact) => {\n    if (contacts.find((item) => item.name === contact.name)) {\n      alert(`${contact.name} is already in contacts`)\n      return false\n    }\n    setContacts((prev) => [contact, ...prev])\n    return true\n  }\n\n  const deleteContact = (id) => {\n    setContacts((prev) => prev.filter((contact) => contact.id !== id))\n  }\n\n  const handleChange = (e) => {\n    setFilter(e.currentTarget.value)\n  }\n\n  const filterContact = () => {\n    const normalizedFilter = filter.toLowerCase()\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={handleChange} />\n      <ContactsList contacts={filterContact()} remove={deleteContact} />\n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1GzbK\",\"input\":\"ContactForm_input__3Y5kF\",\"button\":\"ContactForm_button__2egIU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__1mAVf\",\"item\":\"ContactsList_item__1I-_o\",\"text\":\"ContactsList_text__2sm5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1IEUX\"};"],"sourceRoot":""}